import pexpect
import time
import random
import sys

lamps = []
i = 1
if len(sys.argv) > 1:
    for i in range(1, len(sys.argv)):
        lamps.append(sys.argv[i])
else:
    print("Please specify a mac adress..")
print(lamps)

# lamp = ["BE:FF:E5:01:A7:95", "BE:FF:E6:00:FD:5E"]
hci = ["hci0", "hci1"]

def GenColor():
    randColor = hex(random.randint(0, 255))
    return randColor

def GenColorCMD():
    randColor = ""
    for _ in range(0, 3):
        color = GenColor()
        if len(str(color)) < 4:
            randColor += str(color)[2:] + "0"
        else:
            randColor += str(color)[2:]
    mode = "df"
    luminosity = "ff"
    cmdCOLOR = "char-write-req 0x0008 7e07" + mode + luminosity + randColor + "00ef"
    # char-write-req 0x0008 7e070503ff000000ef
    return cmdCOLOR

conn_successA = False
conn_successB = False
print("Trying to connect...")
if len(lamps) == 1:
    try:
        processA = pexpect.spawn("sudo gatttool -I -i " + hci[0])
        processA.sendline("connect " + lamps[0])
        processA.expect("Connection successful", timeout=5)
        print("Connection successful " + hci[0])
        conn_successA = True
    except:
        print("error when connecting to " + lamps[0])
if len(lamps) == 2:
    try:
        processA = pexpect.spawn("sudo gatttool -I -i " + hci[0])
        processA.sendline("connect " + lamps[0])
        processA.expect("Connection successful", timeout=5)
        print("Connection successful " + hci[0])
        conn_successA = True
    except:
        print("error when connecting to " + lamps[0])
    try:
        processB = pexpect.spawn("sudo gatttool -I -i " + hci[1])
        processB.sendline("connect " + lamps[1])
        processB.expect("Connection successful", timeout=5)
        print("Connection successful " + hci[1])
        conn_successB = True
    except:
        print("error when connecting to " + lamps[1])

while 1:
    try:
        if conn_successA == True:
            CMDA = GenColorCMD()
            print("Sending to "+ lamps[0] + " : " + CMDA)
            processA.sendline(CMDA)
        if conn_successB == True:
            CMDB = GenColorCMD()
            print("Sending to "+ lamps[1] + " : " + CMDB)
            processB.sendline(CMDB)
        if conn_successB == False and conn_successA == False:
            print("No data to send, exiting...")
            break
        time.sleep(1)
    except:
        continue

exit()